<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Pressed78RPMDisc', 'doctrine');

/**
 * BasePressed78RPMDisc
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $quantity
 * @property integer $generation
 * @property string $year_recorded
 * @property integer $copies
 * @property string $stock_brand
 * @property integer $off_brand
 * @property integer $fungus
 * @property integer $other_contaminants
 * @property integer $duration
 * @property string $duration_type
 * @property string $type
 * @property integer $material
 * @property integer $oxidationcorrosion
 * @property integer $pack_deformation
 * @property integer $noise_reduction
 * @property integer $tape_type
 * @property integer $thin_tape
 * @property integer $slow_speed
 * @property integer $sound_field
 * @property integer $soft_binder_syndrome
 * @property integer $gauge
 * @property integer $color
 * @property integer $colorfade
 * @property integer $soundtrackformat
 * @property integer $substrate
 * @property integer $strongodor
 * @property integer $vinegarodor
 * @property integer $adstriplevel
 * @property integer $shrinkage
 * @property integer $levelofshrinkage
 * @property integer $rust
 * @property integer $discoloration
 * @property integer $surfaceblisteringbubbling
 * @property integer $thintape
 * @property integer $1993orearlier
 * @property integer $datagradetape
 * @property integer $longplay32k96k
 * @property integer $corrosionrustoxidation
 * @property integer $composition
 * @property integer $nonstandardbrand
 * @property integer $trackconfiguration
 * @property integer $tapethickness
 * @property integer $speed
 * @property integer $softbindersyndrome
 * @property integer $materialsbreakdown
 * @property integer $physicaldamage
 * @property integer $delamination
 * @property integer $plasticizerexudation
 * @property integer $recordinglayer
 * @property integer $recordingspeed
 * @property integer $cylindertype
 * @property integer $reflectivelayer
 * @property integer $datalayer
 * @property integer $opticaldisctype
 * @property integer $format
 * @property integer $recordingstandard
 * @property date $publicationyear
 * @property integer $capacitylayers
 * @property integer $codec
 * @property integer $datarate
 * @property integer $sheddingsoftbinder
 * @property integer $formatversion
 * @property integer $oxide
 * @property integer $bindersystem
 * @property integer $reelsize
 * @property integer $whiteresidue
 * @property integer $size
 * @property integer $formattypedvideorecordingformat
 * @property integer $bitrate
 * @property integer $scanning
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * 
 * @method integer          getId()                              Returns the current record's "id" value
 * @method integer          getQuantity()                        Returns the current record's "quantity" value
 * @method integer          getGeneration()                      Returns the current record's "generation" value
 * @method string           getYearRecorded()                    Returns the current record's "year_recorded" value
 * @method integer          getCopies()                          Returns the current record's "copies" value
 * @method string           getStockBrand()                      Returns the current record's "stock_brand" value
 * @method integer          getOffBrand()                        Returns the current record's "off_brand" value
 * @method integer          getFungus()                          Returns the current record's "fungus" value
 * @method integer          getOtherContaminants()               Returns the current record's "other_contaminants" value
 * @method integer          getDuration()                        Returns the current record's "duration" value
 * @method string           getDurationType()                    Returns the current record's "duration_type" value
 * @method string           getType()                            Returns the current record's "type" value
 * @method integer          getMaterial()                        Returns the current record's "material" value
 * @method integer          getOxidationcorrosion()              Returns the current record's "oxidationcorrosion" value
 * @method integer          getPackDeformation()                 Returns the current record's "pack_deformation" value
 * @method integer          getNoiseReduction()                  Returns the current record's "noise_reduction" value
 * @method integer          getTapeType()                        Returns the current record's "tape_type" value
 * @method integer          getThinTape()                        Returns the current record's "thin_tape" value
 * @method integer          getSlowSpeed()                       Returns the current record's "slow_speed" value
 * @method integer          getSoundField()                      Returns the current record's "sound_field" value
 * @method integer          getSoftBinderSyndrome()              Returns the current record's "soft_binder_syndrome" value
 * @method integer          getGauge()                           Returns the current record's "gauge" value
 * @method integer          getColor()                           Returns the current record's "color" value
 * @method integer          getColorfade()                       Returns the current record's "colorfade" value
 * @method integer          getSoundtrackformat()                Returns the current record's "soundtrackformat" value
 * @method integer          getSubstrate()                       Returns the current record's "substrate" value
 * @method integer          getStrongodor()                      Returns the current record's "strongodor" value
 * @method integer          getVinegarodor()                     Returns the current record's "vinegarodor" value
 * @method integer          getAdstriplevel()                    Returns the current record's "adstriplevel" value
 * @method integer          getShrinkage()                       Returns the current record's "shrinkage" value
 * @method integer          getLevelofshrinkage()                Returns the current record's "levelofshrinkage" value
 * @method integer          getRust()                            Returns the current record's "rust" value
 * @method integer          getDiscoloration()                   Returns the current record's "discoloration" value
 * @method integer          getSurfaceblisteringbubbling()       Returns the current record's "surfaceblisteringbubbling" value
 * @method integer          getThintape()                        Returns the current record's "thintape" value
 * @method integer          get1993orearlier()                   Returns the current record's "1993orearlier" value
 * @method integer          getDatagradetape()                   Returns the current record's "datagradetape" value
 * @method integer          getLongplay32k96k()                  Returns the current record's "longplay32k96k" value
 * @method integer          getCorrosionrustoxidation()          Returns the current record's "corrosionrustoxidation" value
 * @method integer          getComposition()                     Returns the current record's "composition" value
 * @method integer          getNonstandardbrand()                Returns the current record's "nonstandardbrand" value
 * @method integer          getTrackconfiguration()              Returns the current record's "trackconfiguration" value
 * @method integer          getTapethickness()                   Returns the current record's "tapethickness" value
 * @method integer          getSpeed()                           Returns the current record's "speed" value
 * @method integer          getSoftbindersyndrome()              Returns the current record's "softbindersyndrome" value
 * @method integer          getMaterialsbreakdown()              Returns the current record's "materialsbreakdown" value
 * @method integer          getPhysicaldamage()                  Returns the current record's "physicaldamage" value
 * @method integer          getDelamination()                    Returns the current record's "delamination" value
 * @method integer          getPlasticizerexudation()            Returns the current record's "plasticizerexudation" value
 * @method integer          getRecordinglayer()                  Returns the current record's "recordinglayer" value
 * @method integer          getRecordingspeed()                  Returns the current record's "recordingspeed" value
 * @method integer          getCylindertype()                    Returns the current record's "cylindertype" value
 * @method integer          getReflectivelayer()                 Returns the current record's "reflectivelayer" value
 * @method integer          getDatalayer()                       Returns the current record's "datalayer" value
 * @method integer          getOpticaldisctype()                 Returns the current record's "opticaldisctype" value
 * @method integer          getFormat()                          Returns the current record's "format" value
 * @method integer          getRecordingstandard()               Returns the current record's "recordingstandard" value
 * @method date             getPublicationyear()                 Returns the current record's "publicationyear" value
 * @method integer          getCapacitylayers()                  Returns the current record's "capacitylayers" value
 * @method integer          getCodec()                           Returns the current record's "codec" value
 * @method integer          getDatarate()                        Returns the current record's "datarate" value
 * @method integer          getSheddingsoftbinder()              Returns the current record's "sheddingsoftbinder" value
 * @method integer          getFormatversion()                   Returns the current record's "formatversion" value
 * @method integer          getOxide()                           Returns the current record's "oxide" value
 * @method integer          getBindersystem()                    Returns the current record's "bindersystem" value
 * @method integer          getReelsize()                        Returns the current record's "reelsize" value
 * @method integer          getWhiteresidue()                    Returns the current record's "whiteresidue" value
 * @method integer          getSize()                            Returns the current record's "size" value
 * @method integer          getFormattypedvideorecordingformat() Returns the current record's "formattypedvideorecordingformat" value
 * @method integer          getBitrate()                         Returns the current record's "bitrate" value
 * @method integer          getScanning()                        Returns the current record's "scanning" value
 * @method timestamp        getCreatedAt()                       Returns the current record's "created_at" value
 * @method timestamp        getUpdatedAt()                       Returns the current record's "updated_at" value
 * @method Pressed78RPMDisc setId()                              Sets the current record's "id" value
 * @method Pressed78RPMDisc setQuantity()                        Sets the current record's "quantity" value
 * @method Pressed78RPMDisc setGeneration()                      Sets the current record's "generation" value
 * @method Pressed78RPMDisc setYearRecorded()                    Sets the current record's "year_recorded" value
 * @method Pressed78RPMDisc setCopies()                          Sets the current record's "copies" value
 * @method Pressed78RPMDisc setStockBrand()                      Sets the current record's "stock_brand" value
 * @method Pressed78RPMDisc setOffBrand()                        Sets the current record's "off_brand" value
 * @method Pressed78RPMDisc setFungus()                          Sets the current record's "fungus" value
 * @method Pressed78RPMDisc setOtherContaminants()               Sets the current record's "other_contaminants" value
 * @method Pressed78RPMDisc setDuration()                        Sets the current record's "duration" value
 * @method Pressed78RPMDisc setDurationType()                    Sets the current record's "duration_type" value
 * @method Pressed78RPMDisc setType()                            Sets the current record's "type" value
 * @method Pressed78RPMDisc setMaterial()                        Sets the current record's "material" value
 * @method Pressed78RPMDisc setOxidationcorrosion()              Sets the current record's "oxidationcorrosion" value
 * @method Pressed78RPMDisc setPackDeformation()                 Sets the current record's "pack_deformation" value
 * @method Pressed78RPMDisc setNoiseReduction()                  Sets the current record's "noise_reduction" value
 * @method Pressed78RPMDisc setTapeType()                        Sets the current record's "tape_type" value
 * @method Pressed78RPMDisc setThinTape()                        Sets the current record's "thin_tape" value
 * @method Pressed78RPMDisc setSlowSpeed()                       Sets the current record's "slow_speed" value
 * @method Pressed78RPMDisc setSoundField()                      Sets the current record's "sound_field" value
 * @method Pressed78RPMDisc setSoftBinderSyndrome()              Sets the current record's "soft_binder_syndrome" value
 * @method Pressed78RPMDisc setGauge()                           Sets the current record's "gauge" value
 * @method Pressed78RPMDisc setColor()                           Sets the current record's "color" value
 * @method Pressed78RPMDisc setColorfade()                       Sets the current record's "colorfade" value
 * @method Pressed78RPMDisc setSoundtrackformat()                Sets the current record's "soundtrackformat" value
 * @method Pressed78RPMDisc setSubstrate()                       Sets the current record's "substrate" value
 * @method Pressed78RPMDisc setStrongodor()                      Sets the current record's "strongodor" value
 * @method Pressed78RPMDisc setVinegarodor()                     Sets the current record's "vinegarodor" value
 * @method Pressed78RPMDisc setAdstriplevel()                    Sets the current record's "adstriplevel" value
 * @method Pressed78RPMDisc setShrinkage()                       Sets the current record's "shrinkage" value
 * @method Pressed78RPMDisc setLevelofshrinkage()                Sets the current record's "levelofshrinkage" value
 * @method Pressed78RPMDisc setRust()                            Sets the current record's "rust" value
 * @method Pressed78RPMDisc setDiscoloration()                   Sets the current record's "discoloration" value
 * @method Pressed78RPMDisc setSurfaceblisteringbubbling()       Sets the current record's "surfaceblisteringbubbling" value
 * @method Pressed78RPMDisc setThintape()                        Sets the current record's "thintape" value
 * @method Pressed78RPMDisc set1993orearlier()                   Sets the current record's "1993orearlier" value
 * @method Pressed78RPMDisc setDatagradetape()                   Sets the current record's "datagradetape" value
 * @method Pressed78RPMDisc setLongplay32k96k()                  Sets the current record's "longplay32k96k" value
 * @method Pressed78RPMDisc setCorrosionrustoxidation()          Sets the current record's "corrosionrustoxidation" value
 * @method Pressed78RPMDisc setComposition()                     Sets the current record's "composition" value
 * @method Pressed78RPMDisc setNonstandardbrand()                Sets the current record's "nonstandardbrand" value
 * @method Pressed78RPMDisc setTrackconfiguration()              Sets the current record's "trackconfiguration" value
 * @method Pressed78RPMDisc setTapethickness()                   Sets the current record's "tapethickness" value
 * @method Pressed78RPMDisc setSpeed()                           Sets the current record's "speed" value
 * @method Pressed78RPMDisc setSoftbindersyndrome()              Sets the current record's "softbindersyndrome" value
 * @method Pressed78RPMDisc setMaterialsbreakdown()              Sets the current record's "materialsbreakdown" value
 * @method Pressed78RPMDisc setPhysicaldamage()                  Sets the current record's "physicaldamage" value
 * @method Pressed78RPMDisc setDelamination()                    Sets the current record's "delamination" value
 * @method Pressed78RPMDisc setPlasticizerexudation()            Sets the current record's "plasticizerexudation" value
 * @method Pressed78RPMDisc setRecordinglayer()                  Sets the current record's "recordinglayer" value
 * @method Pressed78RPMDisc setRecordingspeed()                  Sets the current record's "recordingspeed" value
 * @method Pressed78RPMDisc setCylindertype()                    Sets the current record's "cylindertype" value
 * @method Pressed78RPMDisc setReflectivelayer()                 Sets the current record's "reflectivelayer" value
 * @method Pressed78RPMDisc setDatalayer()                       Sets the current record's "datalayer" value
 * @method Pressed78RPMDisc setOpticaldisctype()                 Sets the current record's "opticaldisctype" value
 * @method Pressed78RPMDisc setFormat()                          Sets the current record's "format" value
 * @method Pressed78RPMDisc setRecordingstandard()               Sets the current record's "recordingstandard" value
 * @method Pressed78RPMDisc setPublicationyear()                 Sets the current record's "publicationyear" value
 * @method Pressed78RPMDisc setCapacitylayers()                  Sets the current record's "capacitylayers" value
 * @method Pressed78RPMDisc setCodec()                           Sets the current record's "codec" value
 * @method Pressed78RPMDisc setDatarate()                        Sets the current record's "datarate" value
 * @method Pressed78RPMDisc setSheddingsoftbinder()              Sets the current record's "sheddingsoftbinder" value
 * @method Pressed78RPMDisc setFormatversion()                   Sets the current record's "formatversion" value
 * @method Pressed78RPMDisc setOxide()                           Sets the current record's "oxide" value
 * @method Pressed78RPMDisc setBindersystem()                    Sets the current record's "bindersystem" value
 * @method Pressed78RPMDisc setReelsize()                        Sets the current record's "reelsize" value
 * @method Pressed78RPMDisc setWhiteresidue()                    Sets the current record's "whiteresidue" value
 * @method Pressed78RPMDisc setSize()                            Sets the current record's "size" value
 * @method Pressed78RPMDisc setFormattypedvideorecordingformat() Sets the current record's "formattypedvideorecordingformat" value
 * @method Pressed78RPMDisc setBitrate()                         Sets the current record's "bitrate" value
 * @method Pressed78RPMDisc setScanning()                        Sets the current record's "scanning" value
 * @method Pressed78RPMDisc setCreatedAt()                       Sets the current record's "created_at" value
 * @method Pressed78RPMDisc setUpdatedAt()                       Sets the current record's "updated_at" value
 * 
 * @package    mediaSCORE
 * @subpackage model
 * @author     Nouman Tayyab
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePressed78RPMDisc extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('pressed78_r_p_m_disc');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('quantity', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('generation', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('year_recorded', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('copies', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('stock_brand', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('off_brand', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('fungus', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('other_contaminants', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('duration', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('duration_type', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('type', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('material', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('oxidationcorrosion', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('pack_deformation', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('noise_reduction', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('tape_type', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('thin_tape', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('slow_speed', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('sound_field', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('soft_binder_syndrome', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('gauge', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('color', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('colorfade', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('soundtrackformat', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('substrate', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('strongodor', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('vinegarodor', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('adstriplevel', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('shrinkage', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('levelofshrinkage', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('rust', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('discoloration', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('surfaceblisteringbubbling', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('thintape', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('1993orearlier', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('datagradetape', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('longplay32k96k', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('corrosionrustoxidation', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('composition', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('nonstandardbrand', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('trackconfiguration', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('tapethickness', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('speed', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('softbindersyndrome', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('materialsbreakdown', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('physicaldamage', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('delamination', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('plasticizerexudation', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('recordinglayer', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('recordingspeed', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('cylindertype', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('reflectivelayer', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('datalayer', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('opticaldisctype', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('format', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('recordingstandard', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('publicationyear', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('capacitylayers', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('codec', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('datarate', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('sheddingsoftbinder', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('formatversion', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('oxide', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('bindersystem', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('reelsize', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('whiteresidue', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('size', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('formattypedvideorecordingformat', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('bitrate', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('scanning', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}