<?php

/**
 * BaseCollectionStorageLocation
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @property integer $collection_id
 * @property integer $storage_location_id
 * @property Collection $Collection
 * @property StorageLocation $StorageLocation
 *
 * @method integer                   getCollectionId()        Returns the current record's "collection_id" value
 * @method integer                   getStorageLocationId()   Returns the current record's "storage_location_id" value
 * @method Collection                getCollection()          Returns the current record's "Collection" value
 * @method StorageLocation           getStorageLocation()     Returns the current record's "StorageLocation" value
 * @method CollectionStorageLocation setCollectionId()        Sets the current record's "collection_id" value
 * @method CollectionStorageLocation setStorageLocationId()   Sets the current record's "storage_location_id" value
 * @method CollectionStorageLocation setCollection()          Sets the current record's "Collection" value
 * @method CollectionStorageLocation setStorageLocation()     Sets the current record's "StorageLocation" value
 *
 * @package    mediaSCORE
 * @subpackage model
 * @author     Nouman Tayyab
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCollectionStorageLocation extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('collection_storage_location');
        $this->hasColumn('collection_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
        $this->hasColumn('storage_location_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Collection', array(
         'local' => 'collection_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('StorageLocation', array(
             'local' => 'storage_location_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));
    }
}
