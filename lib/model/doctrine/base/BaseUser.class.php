<?php

/**
 * BaseUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $first_name
 * @property string $last_name
 * @property string $password
 * @property string $email
 * @property string $phone
 * @property string $role
 * @property string $type
 * @property text $contact_info
 * @property integer $unit_id
 * @property Doctrine_Collection $createdUnits
 * @property Doctrine_Collection $editedUnits
 * 
 * @method string              getFirstName()    Returns the current record's "first_name" value
 * @method string              getLastName()     Returns the current record's "last_name" value
 * @method string              getPassword()     Returns the current record's "password" value
 * @method string              getEmail()        Returns the current record's "email" value
 * @method string              getPhone()        Returns the current record's "phone" value
 * @method string              getRole()         Returns the current record's "role" value
 * @method string              getType()         Returns the current record's "type" value
 * @method text                getContactInfo()  Returns the current record's "contact_info" value
 * @method integer             getUnitId()       Returns the current record's "unit_id" value
 * @method Doctrine_Collection getCreatedUnits() Returns the current record's "createdUnits" collection
 * @method Doctrine_Collection getEditedUnits()  Returns the current record's "editedUnits" collection
 * @method User                setFirstName()    Sets the current record's "first_name" value
 * @method User                setLastName()     Sets the current record's "last_name" value
 * @method User                setPassword()     Sets the current record's "password" value
 * @method User                setEmail()        Sets the current record's "email" value
 * @method User                setPhone()        Sets the current record's "phone" value
 * @method User                setRole()         Sets the current record's "role" value
 * @method User                setType()         Sets the current record's "type" value
 * @method User                setContactInfo()  Sets the current record's "contact_info" value
 * @method User                setUnitId()       Sets the current record's "unit_id" value
 * @method User                setCreatedUnits() Sets the current record's "createdUnits" collection
 * @method User                setEditedUnits()  Sets the current record's "editedUnits" collection
 * 
 * @package    mediaSCORE
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUser extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('user');
        $this->hasColumn('first_name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('last_name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('password', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('phone', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('role', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('type', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('contact_info', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('unit_id', 'integer', null, array(
             'type' => 'integer',
             ));

        $this->setSubClasses(array(
             'Evaluator' => 
             array(
              'type' => 1,
             ),
             'Person' => 
             array(
              'type' => 2,
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Store as createdUnits', array(
             'local' => 'id',
             'foreign' => 'creator_id'));

        $this->hasMany('Store as editedUnits', array(
             'local' => 'id',
             'foreign' => 'last_editor_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}