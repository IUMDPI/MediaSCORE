<?php

/**
 * BaseStorageLocation
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property text $resident_structure_description
 * @property integer $env_rating
 * @property Doctrine_Collection $Units
 * @property Doctrine_Collection $Collections
 * @property Doctrine_Collection $UnitMultipleCollection
 * @property Doctrine_Collection $UnitStorageLocation
 * @property Doctrine_Collection $CollectionMultipleAssetGroup
 * @property Doctrine_Collection $CollectionStorageLocation
 * 
 * @method string              getName()                           Returns the current record's "name" value
 * @method text                getResidentStructureDescription()   Returns the current record's "resident_structure_description" value
 * @method integer             getEnvRating()                      Returns the current record's "env_rating" value
 * @method Doctrine_Collection getUnits()                          Returns the current record's "Units" collection
 * @method Doctrine_Collection getCollections()                    Returns the current record's "Collections" collection
 * @method Doctrine_Collection getUnitMultipleCollection()         Returns the current record's "UnitMultipleCollection" collection
 * @method Doctrine_Collection getUnitStorageLocation()            Returns the current record's "UnitStorageLocation" collection
 * @method Doctrine_Collection getCollectionMultipleAssetGroup()   Returns the current record's "CollectionMultipleAssetGroup" collection
 * @method Doctrine_Collection getCollectionStorageLocation()      Returns the current record's "CollectionStorageLocation" collection
 * @method StorageLocation     setName()                           Sets the current record's "name" value
 * @method StorageLocation     setResidentStructureDescription()   Sets the current record's "resident_structure_description" value
 * @method StorageLocation     setEnvRating()                      Sets the current record's "env_rating" value
 * @method StorageLocation     setUnits()                          Sets the current record's "Units" collection
 * @method StorageLocation     setCollections()                    Sets the current record's "Collections" collection
 * @method StorageLocation     setUnitMultipleCollection()         Sets the current record's "UnitMultipleCollection" collection
 * @method StorageLocation     setUnitStorageLocation()            Sets the current record's "UnitStorageLocation" collection
 * @method StorageLocation     setCollectionMultipleAssetGroup()   Sets the current record's "CollectionMultipleAssetGroup" collection
 * @method StorageLocation     setCollectionStorageLocation()      Sets the current record's "CollectionStorageLocation" collection
 * 
 * @package    mediaSCORE
 * @subpackage model
 * @author     Nouman Tayyab
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseStorageLocation extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('storage_location');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('resident_structure_description', 'text', null, array(
             'type' => 'text',
             'notnull' => true,
             ));
        $this->hasColumn('env_rating', 'integer', null, array(
             'type' => 'integer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Unit as Units', array(
             'refClass' => 'UnitStorageLocation',
             'local' => 'storage_location_id',
             'foreign' => 'unit_id'));

        $this->hasMany('Collection as Collections', array(
             'refClass' => 'CollectionStorageLocation',
             'local' => 'storage_location_id',
             'foreign' => 'collection_id'));

        $this->hasMany('UnitMultipleCollection', array(
             'refClass' => 'UnitStorageLocation',
             'local' => 'storage_location_id',
             'foreign' => 'unit_id'));

        $this->hasMany('UnitStorageLocation', array(
             'local' => 'id',
             'foreign' => 'storage_location_id'));

        $this->hasMany('CollectionMultipleAssetGroup', array(
             'refClass' => 'CollectionStorageLocation',
             'local' => 'storage_location_id',
             'foreign' => 'collection_id'));

        $this->hasMany('CollectionStorageLocation', array(
             'local' => 'id',
             'foreign' => 'storage_location_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}