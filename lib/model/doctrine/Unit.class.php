<?php

/**
 * Unit
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    mediaSCORE
 * @subpackage model
 * @author     Nouman Tayyab
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Unit extends BaseUnit {

    /**
     * get the duration
     * 
     * @param integer $unitID
     * @return string 
     */
    public function getDuration($unitID) {
        $totalDuration = 0;
        $collection = Doctrine_Query::Create()
                ->from('Collection c')
                ->select('c.*')
                ->where('c.parent_node_id  = ?', $unitID)
                ->fetchArray();
        if (sizeof($collection) > 0) {
            foreach ($collection as $value) {
                $assetGroup = Doctrine_Query::Create()
                        ->from('AssetGroup ag')
                        ->select('ag.*')
                        ->where('ag.parent_node_id  = ?', $value['id'])
                        ->fetchArray();
                if (sizeof($assetGroup) > 0) {
                    foreach ($assetGroup as $valueAG) {
                        $formatType = Doctrine_Query::Create()
                                ->from('FormatType ft')
                                ->select('ft.*')
                                ->where('ft.id  = ?', $valueAG['format_id'])
                                ->fetchArray();
                        if (sizeof($formatType) > 0)
                            $totalDuration = $totalDuration + $formatType[0]['duration'];
                    }
                }
            }
        }

        return minutesToHour::ConvertMinutes2Hours($totalDuration);
    }

    /**
     * get the Units Custome
     * 
     * @param  Array of adding custome values
     * @return Array of Units
     */
    static public function getUnitNameCustome($add_values = NULL) {
        $Units = Doctrine_Query::Create()
                ->from('Unit c')
                ->select('c.*')
                ->fetchArray();
        $UnitsArray = array();
        
        foreach ($Units as $Unit) {
//            var_dump($Unit);
//            exit;
            $UnitsArray[$Unit['id']] = $Unit['name'];
        }

        if ($add_values) {
            $UnitsArray[0] = $add_values;
        }
        ksort($UnitsArray);        
        return $UnitsArray;
    }

}
